<Activity mc:Ignorable="sap sap2010" x:Class="SageVoucherAllocations" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/cv" xmlns:p1="http://schemas.uipath.com/workflow/activities/ocr" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing.Common" xmlns:sd2="clr-namespace:System.Drawing;assembly=System.Drawing.Primitives" xmlns:uc="clr-namespace:UiPath.CV;assembly=UiPath.CV" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Reference" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property Name="in_dtAllocationStatusData" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>990,5717</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SageVoucherAllocations_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="82">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.CV</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Shared.ObjectLibrary</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.CV.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.CV.Activities.Interfaces</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Models</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="40">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.CV.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="SageVoucherAllocations" sap:VirtualizedContainerService.HintSize="740,5652" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strReferenceRowName" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtAllocationData" />
      <Variable x:TypeArguments="x:Int32" Name="intRowIndex" />
      <Variable x:TypeArguments="x:String" Name="strRow" />
      <Variable x:TypeArguments="x:Boolean" Name="isInvoiceRowExist" />
      <Variable x:TypeArguments="x:String" Name="strExtractedRef" />
      <Variable x:TypeArguments="x:String" Name="strAllocateRowName" />
      <Variable x:TypeArguments="x:Boolean" Name="isRefFound" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="698,52" sap2010:WorkflowViewState.IdRef="CommentOut_3">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,238" sap2010:WorkflowViewState.IdRef="Sequence_22">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[isInvoiceRowExist]" DisplayName="If Invoice Row Exist" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="If_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_11">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[intRowIndex]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">1</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strReferenceRowName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["Reference row "+(intRowIndex-1).ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strAllocateRowName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["Allocate row "+(intRowIndex-1).ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strRow]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["Row "+intRowIndex.ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" Condition="[Not isRefFound]" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
                  <ui:InterruptibleDoWhile.Body>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,351" sap2010:WorkflowViewState.IdRef="Sequence_13">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Delay DisplayName="Delay 4 Sec" Duration="00:00:04" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
                      <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'cell  Reference row 0'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="GetValue_1">
                        <ui:GetValue.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="cfd3c7f2-7294-4094-8f71-52f3b11f7db9" InformativeScreenshot="18c6c14d536e8a5e15510b77d91cb54c" Selector="[String.Format(&quot;&lt;wnd app='evolution.exe' ctrlname='FrmAllocation' /&gt;&lt;wnd ctrlname='TableLayoutPanel1' /&gt;&lt;wnd ctrlname='PanelControl3' /&gt;&lt;wnd ctrlname='gcReceiptList' /&gt;&lt;ctrl name='{0}' role='row' /&gt;&lt;ctrl name='{1}' role='cell' /&gt;&quot;, strRow, strReferenceRowName)]">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetValue.Target>
                        <ui:GetValue.Value>
                          <OutArgument x:TypeArguments="x:String">[strExtractedRef]</OutArgument>
                        </ui:GetValue.Value>
                      </ui:GetValue>
                      <If Condition="[strExtractedRef.Trim = in_Reference.Trim]" DisplayName="If Extracted Ref Matched" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="376,429" sap2010:WorkflowViewState.IdRef="Sequence_14">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click 'cell  Allocate row 1'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9a8409fd-e0fc-43bc-9d84-6460c10947ca" InformativeScreenshot="ec87efe628ad4dec2fd138bf8aec9f96" Selector="[String.Format(&quot;&lt;wnd app='evolution.exe' ctrlname='FrmAllocation' /&gt;&lt;wnd ctrlname='TableLayoutPanel1' /&gt;&lt;wnd ctrlname='PanelControl3' /&gt;&lt;wnd ctrlname='gcReceiptList' /&gt;&lt;ctrl name='{0}' role='row' /&gt;&lt;ctrl name='{1}' role='cell' /&gt;&quot;, strRow, strAllocateRowName)]" WaitForReady="COMPLETE">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                </ui:Target>
                              </ui:Click.Target>
                            </ui:Click>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Checked Respective Ref Number Row&quot;]" />
                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">[isRefFound]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="304,452" sap2010:WorkflowViewState.IdRef="Sequence_15">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[intRowIndex]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[intRowIndex+1]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strReferenceRowName]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["Reference row "+(intRowIndex-1).ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strAllocateRowName]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["Allocate row "+(intRowIndex-1).ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strRow]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["Row "+intRowIndex.ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </ui:InterruptibleDoWhile.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InterruptibleDoWhile>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="376,391" sap2010:WorkflowViewState.IdRef="Sequence_12">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Cancel" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="dfb1f0d6-46d8-4956-b9f4-c86ad20f5ea8" InformativeScreenshot="aa9dbfc473794c6c9e3ced3acb57a856" Selector="&lt;wnd app='evolution.exe' ctrlname='FrmAllocation' /&gt;&lt;wnd aaname='pnlButtons' cls='WindowsForms10.Window.*' /&gt;&lt;wnd cls='WindowsForms10.Window.*' title='Cancel' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error" Message="[&quot;Invoice Row not available&quot;]" />
                <Throw DisplayName="Throw BRE" Exception="[New BusinessRuleException(&quot;Invoice Row is not available to allocate&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <p:CVScope ContinueOnError="{x:Null}" DelayBefore="{x:Null}" ScopeId="{x:Null}" Server="{x:Null}" CvMethod="ElementDetection, OCR" DesignTimeCacheId="7161b4b3-66ed-4cac-865d-951c3c07e114" DisplayName="CV Screen Scope 'evolution.exe Voucher'" sap:VirtualizedContainerService.HintSize="698,5472" sap2010:WorkflowViewState.IdRef="CVScope_1" SendOnPremData="False" Version="V5">
      <p:CVScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="CVSessionData" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="839,2375" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:UiElementExists DisplayName="Element Exists - Invoice Row Exist" Exists="[isInvoiceRowExist]" sap:VirtualizedContainerService.HintSize="664,107" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
              <ui:UiElementExists.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="0a0b4049-522c-47a1-96a4-88e77585b962" InformativeScreenshot="150ab8f1de80d780621d40c3195c6e5d" Selector="&lt;wnd app='evolution.exe' ctrlname='FrmAllocation' /&gt;&lt;wnd ctrlname='TableLayoutPanel1' /&gt;&lt;wnd ctrlname='PanelControl2' /&gt;&lt;wnd ctrlname='gcInvList' /&gt;&lt;ctrl name='Row 1' role='row' /&gt;&lt;ctrl name='Allocate row 0' role='cell' /&gt;" TimeoutMS="10000" WaitForReady="COMPLETE" />
              </ui:UiElementExists.Target>
            </ui:UiElementExists>
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="664,52" sap2010:WorkflowViewState.IdRef="CommentOut_2">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,545" sap2010:WorkflowViewState.IdRef="Sequence_17">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <p:CvExtractDataTableWithDescriptor InRegion="{x:Null}" AddHeaders="True" DelayScreenshotAfterScroll="250" Descriptor="[&quot;Target: Table (0,243,1008,77)&quot; +&#xA;&quot;Anchor: Button (777,516,99,32)&quot;]" DesignTimeCacheId="7161b4b3-66ed-4cac-865d-951c3c07e114" DesignTimeScaleFactor="1" DisplayName="CV Extract Table - Table" sap:VirtualizedContainerService.HintSize="334,190" sap2010:WorkflowViewState.IdRef="CvExtractDataTableWithDescriptor_1" IgnoreEmptyRows="False" InformativeScreenshot="3401c3603fb8659bf07603db01555eb8" MaxTableScrollHeightInPixels="30000" NumberOfScrolls="2" RefreshBefore="True" Result="[dtAllocationData]" Scroll="False" ScrollDirection="None" Version="V5">
                    <p:CvExtractDataTableWithDescriptor.DesignTimeDescriptor>
                      <uc:CvDescriptor Id="f8ce4f74-6403-4709-ab40-183b2b4490f4">
                        <uc:CvDescriptor.Anchors>
                          <x:Array Type="uc:CvElementDescriptor">
                            <uc:CvElementDescriptor CellExtraInfo="{x:Null}" DesignTimeArea="777, 516, 99, 32" ElementType="Button" />
                          </x:Array>
                        </uc:CvDescriptor.Anchors>
                        <uc:CvDescriptor.Target>
                          <uc:CvElementDescriptor CellExtraInfo="{x:Null}" DesignTimeArea="0, 243, 1008, 77" ElementType="Table" />
                        </uc:CvDescriptor.Target>
                      </uc:CvDescriptor>
                    </p:CvExtractDataTableWithDescriptor.DesignTimeDescriptor>
                  </p:CvExtractDataTableWithDescriptor>
                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="[intRowIndex]" DataTable="[dtAllocationData]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,907" sap2010:WorkflowViewState.IdRef="Sequence_3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[CurrentRow(4).ToString.ToLower = in_Reference.ToLower]" DisplayName="If Reference Number Matched" sap:VirtualizedContainerService.HintSize="484,815" sap2010:WorkflowViewState.IdRef="If_1">
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="376,629" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strReferenceRowName]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">["Allocate row "+intRowIndex.ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[intRowIndex]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[intRowIndex+1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strRow]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">["Row "+intRowIndex.ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click 'cell  Allocate row 1'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT">
                                  <ui:Click.CursorPosition>
                                    <ui:CursorPosition Position="Center">
                                      <ui:CursorPosition.OffsetX>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:CursorPosition.OffsetX>
                                      <ui:CursorPosition.OffsetY>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:CursorPosition.OffsetY>
                                    </ui:CursorPosition>
                                  </ui:Click.CursorPosition>
                                  <ui:Click.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9a8409fd-e0fc-43bc-9d84-6460c10947ca" InformativeScreenshot="ec87efe628ad4dec2fd138bf8aec9f96" Selector="[String.Format(&quot;&lt;wnd app='evolution.exe' ctrlname='FrmAllocation' /&gt;&lt;wnd ctrlname='TableLayoutPanel1' /&gt;&lt;wnd ctrlname='PanelControl3' /&gt;&lt;wnd ctrlname='gcReceiptList' /&gt;&lt;ctrl name='{0}' role='row' /&gt;&lt;ctrl name='{1}' role='cell' /&gt;&quot;, strRow, strReferenceRowName)]" WaitForReady="COMPLETE">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                    </ui:Target>
                                  </ui:Click.Target>
                                </ui:Click>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Checked Respective Ref Number Row&quot;]" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEachRow>
                  <p:CvElementExistsWithDescriptor DelayScreenshotAfterScroll="{x:Null}" ScrollDirection="{x:Null}" Descriptor="[&quot;Target: CheckBox (51,82,15,15)&quot; +&#xA;&quot;Anchor: Text 'Customer' (54,36,48,11)&quot;]" DesignTimeCacheId="7161b4b3-66ed-4cac-865d-951c3c07e114" DesignTimeScaleFactor="1" DisplayName="CV Element Exists - CheckBox" sap:VirtualizedContainerService.HintSize="334,136" sap2010:WorkflowViewState.IdRef="CvElementExistsWithDescriptor_1" InformativeScreenshot="b7b8b57df08ae92b8d5741c8c9802625" NumberOfScrolls="2" Result="[isInvoiceRowExist]" Version="V5">
                    <p:CvElementExistsWithDescriptor.DesignTimeDescriptor>
                      <uc:CvDescriptor Id="e543095c-d1cd-48a6-8471-a068afb7f043">
                        <uc:CvDescriptor.Anchors>
                          <x:Array Type="uc:CvElementDescriptor">
                            <uc:CvElementDescriptor CellExtraInfo="{x:Null}" DesignTimeArea="54, 36, 48, 11" ElementType="Text" Text="Customer" />
                          </x:Array>
                        </uc:CvDescriptor.Anchors>
                        <uc:CvDescriptor.Target>
                          <uc:CvElementDescriptor CellExtraInfo="{x:Null}" DesignTimeArea="51, 82, 15, 15" ElementType="CheckBox" />
                        </uc:CvDescriptor.Target>
                      </uc:CvDescriptor>
                    </p:CvElementExistsWithDescriptor.DesignTimeDescriptor>
                  </p:CvElementExistsWithDescriptor>
                </Sequence>
              </ui:CommentOut.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CommentOut>
            <If Condition="[isInvoiceRowExist]" sap:VirtualizedContainerService.HintSize="664,4926" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="630,4015" sap2010:WorkflowViewState.IdRef="Sequence_21">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="588,82" sap2010:WorkflowViewState.IdRef="Assign_14">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intRowIndex]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">1</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="588,82" sap2010:WorkflowViewState.IdRef="Assign_15">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strReferenceRowName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["Reference row "+(intRowIndex-1).ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="588,82" sap2010:WorkflowViewState.IdRef="Assign_16">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strAllocateRowName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["Allocate row "+(intRowIndex-1).ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="588,82" sap2010:WorkflowViewState.IdRef="Assign_17">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strRow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["Row "+intRowIndex.ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" Condition="[Not isRefFound]" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="588,1130" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_2">
                    <ui:InterruptibleDoWhile.Body>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="552,964" sap2010:WorkflowViewState.IdRef="Sequence_20">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Delay DisplayName="Delay 4 Sec" Duration="00:00:04" sap:VirtualizedContainerService.HintSize="510,90" sap2010:WorkflowViewState.IdRef="Delay_2" />
                        <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'cell  Reference row 0'" sap:VirtualizedContainerService.HintSize="510,107" sap2010:WorkflowViewState.IdRef="GetValue_2">
                          <ui:GetValue.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="cfd3c7f2-7294-4094-8f71-52f3b11f7db9" InformativeScreenshot="18c6c14d536e8a5e15510b77d91cb54c" Selector="[String.Format(&quot;&lt;wnd app='evolution.exe' ctrlname='FrmAllocation' /&gt;&lt;wnd ctrlname='TableLayoutPanel1' /&gt;&lt;wnd ctrlname='PanelControl3' /&gt;&lt;wnd ctrlname='gcReceiptList' /&gt;&lt;ctrl name='{0}' role='row' /&gt;&lt;ctrl name='{1}' role='cell' /&gt;&quot;, strRow, strReferenceRowName)]">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetValue.Target>
                          <ui:GetValue.Value>
                            <OutArgument x:TypeArguments="x:String">[strExtractedRef]</OutArgument>
                          </ui:GetValue.Value>
                        </ui:GetValue>
                        <If Condition="[strExtractedRef.Trim = in_Reference.Trim]" DisplayName="If Extracted Ref Matched" sap:VirtualizedContainerService.HintSize="510,599" sap2010:WorkflowViewState.IdRef="If_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="476,449" sap2010:WorkflowViewState.IdRef="Sequence_18">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click 'cell  Allocate row 1'" sap:VirtualizedContainerService.HintSize="434,107" sap2010:WorkflowViewState.IdRef="Click_6" KeyModifiers="None" MouseButton="BTN_LEFT">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9a8409fd-e0fc-43bc-9d84-6460c10947ca" InformativeScreenshot="ec87efe628ad4dec2fd138bf8aec9f96" Selector="[String.Format(&quot;&lt;wnd app='evolution.exe' ctrlname='FrmAllocation' /&gt;&lt;wnd ctrlname='TableLayoutPanel1' /&gt;&lt;wnd ctrlname='PanelControl3' /&gt;&lt;wnd ctrlname='gcReceiptList' /&gt;&lt;ctrl name='{0}' role='row' /&gt;&lt;ctrl name='{1}' role='cell' /&gt;&quot;, strRow, strAllocateRowName)]" WaitForReady="COMPLETE">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                  </ui:Target>
                                </ui:Click.Target>
                              </ui:Click>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,92" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Checked Respective Ref Number Row&quot;]" />
                              <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_18">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[isRefFound]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="476,536" sap2010:WorkflowViewState.IdRef="Sequence_19">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_19">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[intRowIndex]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[intRowIndex+1]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_20">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strReferenceRowName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">["Reference row "+(intRowIndex-1).ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_21">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strAllocateRowName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">["Allocate row "+(intRowIndex-1).ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_22">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strRow]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">["Row "+intRowIndex.ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </ui:InterruptibleDoWhile.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InterruptibleDoWhile>
                  <If Condition="[isRefFound]" sap:VirtualizedContainerService.HintSize="588,1106" sap2010:WorkflowViewState.IdRef="If_6">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,195" sap2010:WorkflowViewState.IdRef="Sequence_23">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Allocate Check Box" sap:VirtualizedContainerService.HintSize="334,107" sap2010:WorkflowViewState.IdRef="Click_7" KeyModifiers="None" MouseButton="BTN_LEFT">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9a08bcfb-f3cf-4a15-975d-cd819379bffa" InformativeScreenshot="df253d461c44efc79575f95ec141762c" Selector="&lt;wnd app='evolution.exe' ctrlname='FrmAllocation' /&gt;&lt;wnd ctrlname='TableLayoutPanel1' /&gt;&lt;wnd ctrlname='PanelControl2' /&gt;&lt;wnd ctrlname='gcInvList' /&gt;&lt;ctrl name='Row 1' role='row' /&gt;&lt;ctrl name='Allocate row 0' role='cell' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:Click.Target>
                        </ui:Click>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,761" sap2010:WorkflowViewState.IdRef="Sequence_24">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <p:CvClickWithDescriptor DelayBefore="{x:Null}" DelayMS="{x:Null}" DelayScreenshotAfterScroll="{x:Null}" ScrollDirection="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" Descriptor="[&quot;Target: Text 'Cancel' (912,525,34,12)&quot;]" DesignTimeCacheId="7161b4b3-66ed-4cac-865d-951c3c07e114" DesignTimeScaleFactor="1" DisplayName="CV Click - Text" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="CvClickWithDescriptor_6" InformativeScreenshot="0756ff05d1ab2e6a0e482f8436d5d139" KeyModifiers="None" MouseButton="BTN_LEFT" NumberOfScrolls="2" Version="V5">
                          <p:CvClickWithDescriptor.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </p:CvClickWithDescriptor.CursorPosition>
                          <p:CvClickWithDescriptor.DesignTimeDescriptor>
                            <uc:CvDescriptor Id="3fdefec5-3025-4211-9d39-b818c2aff966">
                              <uc:CvDescriptor.Target>
                                <uc:CvElementDescriptor CellExtraInfo="{x:Null}" DesignTimeArea="912, 525, 34, 12" ElementType="Text" Text="Cancel" />
                              </uc:CvDescriptor.Target>
                            </uc:CvDescriptor>
                          </p:CvClickWithDescriptor.DesignTimeDescriptor>
                          <p:CvClickWithDescriptor.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="e7b52054-011a-44ea-a84d-36a94294f225">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </p:CvClickWithDescriptor.Target>
                        </p:CvClickWithDescriptor>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Error" Message="[&quot;Extracted Ref No Found in Reference List&quot;]" />
                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{in_TransactionItem.SpecificContent(&quot;TRAN_DATE&quot;).ToString,in_TransactionItem.SpecificContent(&quot;TRAN_AMT&quot;).ToString,in_TransactionItem.SpecificContent(&quot;TRAN_PARTICULAR&quot;).ToString,in_TransactionItem.SpecificContent(&quot;DEPOSIT_TYPE&quot;).ToString,&quot;UnAllocated&quot;,&quot;Extracted Ref No Found in Reference List&quot;,in_Reference}]" DataTable="[in_dtAllocationStatusData]" DisplayName="Add Data Row - BRE" sap:VirtualizedContainerService.HintSize="334,186" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                        <Throw DisplayName="Throw BRE" Exception="[New BusinessRuleException(&quot;Extracted Ref No Found in Reference List&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_3" />
                      </Sequence>
                    </If.Else>
                  </If>
                  <p:CvClickWithDescriptor DelayBefore="{x:Null}" DelayMS="{x:Null}" DelayScreenshotAfterScroll="{x:Null}" ScrollDirection="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" Descriptor="[&quot;Target: Text 'OK' (817,526,17,11)&quot;]" DesignTimeCacheId="7161b4b3-66ed-4cac-865d-951c3c07e114" DesignTimeScaleFactor="1" DisplayName="CV Click - Text" sap:VirtualizedContainerService.HintSize="588,185" sap2010:WorkflowViewState.IdRef="CvClickWithDescriptor_3" InformativeScreenshot="9b6942066ad1444b428a99e8a7a042b3" KeyModifiers="None" MouseButton="BTN_LEFT" NumberOfScrolls="2" Version="V5">
                    <p:CvClickWithDescriptor.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </p:CvClickWithDescriptor.CursorPosition>
                    <p:CvClickWithDescriptor.DesignTimeDescriptor>
                      <uc:CvDescriptor Id="fb98c54d-53f2-4679-9930-cb5ec42131e8">
                        <uc:CvDescriptor.Target>
                          <uc:CvElementDescriptor CellExtraInfo="{x:Null}" DesignTimeArea="817, 526, 17, 11" ElementType="Text" Text="OK" />
                        </uc:CvDescriptor.Target>
                      </uc:CvDescriptor>
                    </p:CvClickWithDescriptor.DesignTimeDescriptor>
                    <p:CvClickWithDescriptor.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="53e5bf42-a4ae-4ed2-bedc-9a63ba91e689">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </p:CvClickWithDescriptor.Target>
                  </p:CvClickWithDescriptor>
                  <p:CvClickWithDescriptor DelayBefore="{x:Null}" DelayMS="{x:Null}" DelayScreenshotAfterScroll="{x:Null}" ScrollDirection="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" Descriptor="[&quot;Target: Text 'OK' (479,340,17,11)&quot; +&#xA;&quot;Anchor: InputBox (26,302,163,22)&quot;]" DesignTimeCacheId="7112ba1c-388d-4383-ad64-0f4a74255a72" DesignTimeScaleFactor="1" DisplayName="CV Click - Text" sap:VirtualizedContainerService.HintSize="588,185" sap2010:WorkflowViewState.IdRef="CvClickWithDescriptor_4" InformativeScreenshot="b91863f2588fd919afaf9b3cfa467bef" KeyModifiers="None" MouseButton="BTN_LEFT" NumberOfScrolls="2" Version="V5">
                    <p:CvClickWithDescriptor.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </p:CvClickWithDescriptor.CursorPosition>
                    <p:CvClickWithDescriptor.DesignTimeDescriptor>
                      <uc:CvDescriptor Id="3e307889-69eb-4227-966d-76f8a8c8f01a">
                        <uc:CvDescriptor.Anchors>
                          <x:Array Type="uc:CvElementDescriptor">
                            <uc:CvElementDescriptor CellExtraInfo="{x:Null}" DesignTimeArea="26, 302, 163, 22" ElementType="InputBox" />
                          </x:Array>
                        </uc:CvDescriptor.Anchors>
                        <uc:CvDescriptor.Target>
                          <uc:CvElementDescriptor CellExtraInfo="{x:Null}" DesignTimeArea="479, 340, 17, 11" ElementType="Text" Text="OK" />
                        </uc:CvDescriptor.Target>
                      </uc:CvDescriptor>
                    </p:CvClickWithDescriptor.DesignTimeDescriptor>
                    <p:CvClickWithDescriptor.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="1ec337e5-25ef-4727-a244-ac89bb1473da">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </p:CvClickWithDescriptor.Target>
                  </p:CvClickWithDescriptor>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="588,92" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[in_Reference+&quot; -- Successfully Allocated&quot;]" />
                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{in_TransactionItem.SpecificContent(&quot;TRAN_DATE&quot;).ToString,in_TransactionItem.SpecificContent(&quot;TRAN_AMT&quot;).ToString,in_TransactionItem.SpecificContent(&quot;TRAN_PARTICULAR&quot;).ToString,in_TransactionItem.SpecificContent(&quot;DEPOSIT_TYPE&quot;).ToString,&quot;Allocated&quot;,&quot;Success&quot;,in_Reference}]" DataTable="[in_dtAllocationStatusData]" DisplayName="Add Data Row - Success" sap:VirtualizedContainerService.HintSize="588,186" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                  <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="588,315" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="3" RetryInterval="00:00:05">
                    <ui:RetryScope.ActivityBody>
                      <ActivityAction>
                        <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="300,140" sap2010:WorkflowViewState.IdRef="Sequence_25">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:AddQueueItem ServiceBaseAddress="{x:Null}" DisplayName="Add Queue Item" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="AddQueueItem_2" Priority="Normal" QueueType="STP_BRQ">
                            <ui:AddQueueItem.ItemInformation>
                              <InArgument x:TypeArguments="x:String" x:Key="Extracted_Reference">[in_Reference]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="TRAN_DATE">[in_TransactionItem.SpecificContent("TRAN_DATE").ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="TRAN_AMT">[in_TransactionItem.SpecificContent("TRAN_AMT").ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="TRAN_PARTICULAR">[in_TransactionItem.SpecificContent("TRAN_PARTICULAR").ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="DEPOSIT_TYPE">[in_TransactionItem.SpecificContent("DEPOSIT_TYPE").ToString]</InArgument>
                            </ui:AddQueueItem.ItemInformation>
                            <ui:AddQueueItem.ItemInformationCollection>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" />
                            </ui:AddQueueItem.ItemInformationCollection>
                            <ui:AddQueueItem.Reference>
                              <InArgument x:TypeArguments="x:String" />
                            </ui:AddQueueItem.Reference>
                            <ui:AddQueueItem.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:AddQueueItem.TimeoutMS>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:AddQueueItem>
                        </Sequence>
                      </ActivityAction>
                    </ui:RetryScope.ActivityBody>
                    <ui:RetryScope.Condition>
                      <ActivityFunc x:TypeArguments="x:Boolean" />
                    </ui:RetryScope.Condition>
                  </ui:RetryScope>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="376,761" sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <p:CvClickWithDescriptor DelayBefore="{x:Null}" DelayMS="{x:Null}" DelayScreenshotAfterScroll="{x:Null}" ScrollDirection="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" Descriptor="[&quot;Target: Text 'Cancel' (912,525,34,12)&quot;]" DesignTimeCacheId="7161b4b3-66ed-4cac-865d-951c3c07e114" DesignTimeScaleFactor="1" DisplayName="CV Click - Text" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="CvClickWithDescriptor_5" InformativeScreenshot="0756ff05d1ab2e6a0e482f8436d5d139" KeyModifiers="None" MouseButton="BTN_LEFT" NumberOfScrolls="2" Version="V5">
                    <p:CvClickWithDescriptor.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </p:CvClickWithDescriptor.CursorPosition>
                    <p:CvClickWithDescriptor.DesignTimeDescriptor>
                      <uc:CvDescriptor Id="3fdefec5-3025-4211-9d39-b818c2aff966">
                        <uc:CvDescriptor.Target>
                          <uc:CvElementDescriptor CellExtraInfo="{x:Null}" DesignTimeArea="912, 525, 34, 12" ElementType="Text" Text="Cancel" />
                        </uc:CvDescriptor.Target>
                      </uc:CvDescriptor>
                    </p:CvClickWithDescriptor.DesignTimeDescriptor>
                    <p:CvClickWithDescriptor.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="e7b52054-011a-44ea-a84d-36a94294f225">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </p:CvClickWithDescriptor.Target>
                  </p:CvClickWithDescriptor>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[&quot;Invoice Row not available&quot;]" />
                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{in_TransactionItem.SpecificContent(&quot;TRAN_DATE&quot;).ToString,in_TransactionItem.SpecificContent(&quot;TRAN_AMT&quot;).ToString,in_TransactionItem.SpecificContent(&quot;TRAN_PARTICULAR&quot;).ToString,in_TransactionItem.SpecificContent(&quot;DEPOSIT_TYPE&quot;).ToString,&quot;UnAllocated&quot;,&quot;Invoice Row ID Not Exist&quot;,in_Reference}]" DataTable="[in_dtAllocationStatusData]" DisplayName="Add Data Row - BRE" sap:VirtualizedContainerService.HintSize="334,186" sap2010:WorkflowViewState.IdRef="AddDataRow_3" />
                  <Throw DisplayName="Throw BRE" Exception="[New BusinessRuleException(&quot;Invoice Row is not available to allocate&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_1" />
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </p:CVScope.Body>
      <p:CVScope.DesignTimeCache>
        <uc:CVCache CvUiElements="{x:Null}" OcrTexts="{x:Null}" DataSent="False" />
      </p:CVScope.DesignTimeCache>
      <p:CVScope.DesignTimeCacheContainer>
        <uc:CvCacheContainer>
          <uc:CvCacheContainer.Caches>
            <scg:List x:TypeArguments="uc:CVCache" Capacity="2">
              <uc:CVCache DataSent="False" DisplayName="Screen CV Extract Table - Tabl (Main)" Id="7161b4b3-66ed-4cac-865d-951c3c07e114" InformativeScreenshot="90627e38eb043048739b4371b9da56c6" LogicalPosition="274, 129" OcrText="Voucher Management -- Customer Allocation X Customer ACCA/0001/2015 v Allocate Code Date Reference Description Debit Credit Outstanding INV 5/1/2016 PIU02887 Invoice: ACCA -(May-Aug 2016) (PT) 15,800.00 0.00 15,800.00 Allocate Code Date Reference Description Debit Credit Outstanding MPESA 10/6/2022 REC4236 Receipt-MPESA-004826 0.00 10.00 10.00 MPESA 10/19/2022 REC4238 Receipt-MPESA-004826 0.00 10.00 10.00 MPESA 10/19/2022 REC4239 Receipt-MPESA-004826 0.00 1.00 1.00 OK Cancel" Position="274, 129" ScreenshotGuid="2ef8de07-0489-4286-a592-28088b44a9d0" ServerVersion="1">
                <uc:CVCache.CvAnchorRelations>
                  <scg:List x:TypeArguments="uc:AnchorRelationInfo" Capacity="4">
                    <uc:AnchorRelationInfo IsTargetText="False" Target="1">
                      <uc:AnchorRelationInfo.Anchors>
                        <x:Array Type="x:Int32">
                          <x:Int32>6</x:Int32>
                        </x:Array>
                      </uc:AnchorRelationInfo.Anchors>
                    </uc:AnchorRelationInfo>
                  </scg:List>
                </uc:CVCache.CvAnchorRelations>
                <uc:CVCache.CvTables>
                  <x:Array Type="uc:CvTableInfo">
                    <uc:CvTableInfo>
                      <uc:CvTableInfo.Columns>
                        <x:Array Type="x:Int32">
                          <x:Int32>0</x:Int32>
                          <x:Int32>3</x:Int32>
                          <x:Int32>111</x:Int32>
                          <x:Int32>195</x:Int32>
                          <x:Int32>316</x:Int32>
                          <x:Int32>446</x:Int32>
                          <x:Int32>655</x:Int32>
                          <x:Int32>740</x:Int32>
                          <x:Int32>852</x:Int32>
                          <x:Int32>1008</x:Int32>
                        </x:Array>
                      </uc:CvTableInfo.Columns>
                      <uc:CvTableInfo.Rows>
                        <x:Array Type="x:Int32">
                          <x:Int32>243</x:Int32>
                          <x:Int32>261</x:Int32>
                          <x:Int32>279</x:Int32>
                          <x:Int32>300</x:Int32>
                          <x:Int32>320</x:Int32>
                        </x:Array>
                      </uc:CvTableInfo.Rows>
                    </uc:CvTableInfo>
                    <uc:CvTableInfo>
                      <uc:CvTableInfo.Columns>
                        <x:Array Type="x:Int32">
                          <x:Int32>0</x:Int32>
                          <x:Int32>2</x:Int32>
                          <x:Int32>112</x:Int32>
                          <x:Int32>195</x:Int32>
                          <x:Int32>304</x:Int32>
                          <x:Int32>436</x:Int32>
                          <x:Int32>648</x:Int32>
                          <x:Int32>760</x:Int32>
                          <x:Int32>852</x:Int32>
                          <x:Int32>1010</x:Int32>
                        </x:Array>
                      </uc:CvTableInfo.Columns>
                      <uc:CvTableInfo.Rows>
                        <x:Array Type="x:Int32">
                          <x:Int32>61</x:Int32>
                          <x:Int32>79</x:Int32>
                          <x:Int32>99</x:Int32>
                        </x:Array>
                      </uc:CvTableInfo.Rows>
                    </uc:CvTableInfo>
                  </x:Array>
                </uc:CVCache.CvTables>
                <uc:CVCache.CvUiElements>
                  <scg:List x:TypeArguments="uc:CvElementInfo" Capacity="64">
                    <uc:CvElementInfo Category="Button" Region="881, 516, 100, 33" />
                    <uc:CvElementInfo Category="InputBox" Region="106, 31, 375, 22" />
                    <uc:CvElementInfo Category="Button" Region="777, 516, 99, 32" />
                    <uc:CvElementInfo Category="CheckBox" Region="51, 284, 16, 15" />
                    <uc:CvElementInfo Category="CloseButton" Region="972, 2, 39, 20" />
                    <uc:CvElementInfo Category="ArrowButton" Region="464, 31, 19, 21" />
                    <uc:CvElementInfo Category="CheckBox" Region="51, 303, 15, 15" />
                    <uc:CvElementInfo Category="CheckBox" Region="51, 265, 16, 15" />
                    <uc:CvElementInfo Category="CheckBox" Region="51, 82, 15, 15" />
                    <uc:CvElementInfo Category="Cell" Region="3, 300, 108, 20" />
                    <uc:CvElementInfo Category="Cell" Region="852, 243, 156, 18" />
                    <uc:CvElementInfo Category="Cell" Region="740, 300, 112, 20" />
                    <uc:CvElementInfo Category="Cell" Region="760, 79, 92, 20" />
                    <uc:CvElementInfo Category="Cell" Region="304, 61, 132, 18" />
                    <uc:CvElementInfo Category="Cell" Region="3, 279, 108, 21" />
                    <uc:CvElementInfo Category="Cell" Region="195, 61, 109, 18" />
                    <uc:CvElementInfo Category="Cell" Region="446, 243, 209, 18" />
                    <uc:CvElementInfo Category="Cell" Region="740, 243, 112, 18" />
                    <uc:CvElementInfo Category="Cell" Region="740, 261, 112, 18" />
                    <uc:CvElementInfo Category="Cell" Region="648, 79, 112, 20" />
                    <uc:CvElementInfo Category="Cell" Region="195, 243, 121, 18" />
                    <uc:CvElementInfo Category="Cell" Region="740, 279, 112, 21" />
                    <uc:CvElementInfo Category="Cell" Region="111, 243, 84, 18" />
                    <uc:CvElementInfo Category="Cell" Region="112, 61, 83, 18" />
                    <uc:CvElementInfo Category="Cell" Region="655, 243, 85, 18" />
                    <uc:CvElementInfo Category="Cell" Region="852, 300, 156, 20" />
                    <uc:CvElementInfo Category="Cell" Region="852, 61, 158, 18" />
                    <uc:CvElementInfo Category="Cell" Region="648, 61, 112, 18" />
                    <uc:CvElementInfo Category="Cell" Region="852, 279, 156, 21" />
                    <uc:CvElementInfo Category="Cell" Region="2, 61, 110, 18" />
                    <uc:CvElementInfo Category="Cell" Region="3, 243, 108, 18" />
                    <uc:CvElementInfo Category="Cell" Region="852, 261, 156, 18" />
                    <uc:CvElementInfo Category="Cell" Region="655, 300, 85, 20" />
                    <uc:CvElementInfo Category="Cell" Region="3, 261, 108, 18" />
                    <uc:CvElementInfo Category="Cell" Region="760, 61, 92, 18" />
                    <uc:CvElementInfo Category="Cell" Region="655, 279, 85, 21" />
                    <uc:CvElementInfo Category="Cell" Region="316, 279, 130, 21" />
                    <uc:CvElementInfo Category="Cell" Region="436, 61, 212, 18" />
                    <uc:CvElementInfo Category="Cell" Region="316, 243, 130, 18" />
                    <uc:CvElementInfo Category="Cell" Region="316, 300, 130, 20" />
                    <uc:CvElementInfo Category="Cell" Region="446, 300, 209, 20" />
                    <uc:CvElementInfo Category="Cell" Region="112, 79, 83, 20" />
                    <uc:CvElementInfo Category="Cell" Region="195, 279, 121, 21" />
                    <uc:CvElementInfo Category="Cell" Region="195, 261, 121, 18" />
                    <uc:CvElementInfo Category="Cell" Region="316, 261, 130, 18" />
                    <uc:CvElementInfo Category="Cell" Region="195, 300, 121, 20" />
                    <uc:CvElementInfo Category="Cell" Region="446, 279, 209, 21" />
                    <uc:CvElementInfo Category="Cell" Region="111, 300, 84, 20" />
                    <uc:CvElementInfo Category="Cell" Region="111, 279, 84, 21" />
                    <uc:CvElementInfo Category="Cell" Region="195, 79, 109, 20" />
                    <uc:CvElementInfo Category="Cell" Region="446, 261, 209, 18" />
                    <uc:CvElementInfo Category="Cell" Region="111, 261, 84, 18" />
                    <uc:CvElementInfo Category="Cell" Region="655, 261, 85, 18" />
                    <uc:CvElementInfo Category="Cell" Region="304, 79, 132, 20" />
                    <uc:CvElementInfo Category="Cell" Region="2, 79, 110, 20" />
                    <uc:CvElementInfo Category="Cell" Region="852, 79, 158, 20" />
                    <uc:CvElementInfo Category="Cell" Region="436, 79, 212, 20" />
                    <uc:CvElementInfo Category="Icon" Confidence="Runtime" Region="50, 265, 19, 17" />
                    <uc:CvElementInfo Category="Icon" Confidence="Runtime" Region="773, 516, 105, 31" />
                    <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="0, 512, 810, 38" />
                    <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="849, 236, 159, 9" />
                    <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="454, 237, 199, 8" />
                    <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="850, 96, 158, 20" />
                    <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="737, 237, 113, 8" />
                  </scg:List>
                </uc:CVCache.CvUiElements>
                <uc:CVCache.OcrTexts>
                  <scg:List x:TypeArguments="uc:OcrTextInfo" Capacity="64">
                    <uc:OcrTextInfo Region="1, 5, 49, 12" Text="Voucher" />
                    <uc:OcrTextInfo Region="51, 6, 77, 13" Text="Management" />
                    <uc:OcrTextInfo Region="129, 6, 11, 11" Text="--" />
                    <uc:OcrTextInfo Region="141, 6, 58, 11" Text="Customer" />
                    <uc:OcrTextInfo Region="199, 5, 59, 12" Text="Allocation" />
                    <uc:OcrTextInfo Region="985, 6, 12, 10" Text="X" />
                    <uc:OcrTextInfo Region="54, 36, 48, 11" Text="Customer" />
                    <uc:OcrTextInfo Region="110, 35, 87, 14" Text="ACCA/0001/2015" />
                    <uc:OcrTextInfo Region="468, 37, 10, 9" Text="v" />
                    <uc:OcrTextInfo Region="39, 66, 40, 12" Text="Allocate" />
                    <uc:OcrTextInfo Region="116, 66, 27, 12" Text="Code" />
                    <uc:OcrTextInfo Region="200, 67, 25, 11" Text="Date" />
                    <uc:OcrTextInfo Region="309, 66, 52, 12" Text="Reference" />
                    <uc:OcrTextInfo Region="441, 67, 55, 12" Text="Description" />
                    <uc:OcrTextInfo Region="733, 67, 28, 11" Text="Debit" />
                    <uc:OcrTextInfo Region="821, 66, 32, 12" Text="Credit" />
                    <uc:OcrTextInfo Region="945, 67, 61, 12" Text="Outstanding" />
                    <uc:OcrTextInfo Region="116, 84, 19, 11" Text="INV" />
                    <uc:OcrTextInfo Region="201, 84, 45, 13" Text="5/1/2016" />
                    <uc:OcrTextInfo Region="309, 84, 50, 11" Text="PIU02887" />
                    <uc:OcrTextInfo Region="441, 84, 40, 11" Text="Invoice:" />
                    <uc:OcrTextInfo Region="483, 84, 30, 11" Text="ACCA" />
                    <uc:OcrTextInfo Region="515, 83, 52, 14" Text="-(May-Aug" />
                    <uc:OcrTextInfo Region="568, 83, 30, 14" Text="2016)" />
                    <uc:OcrTextInfo Region="600, 83, 21, 14" Text="(PT)" />
                    <uc:OcrTextInfo Region="708, 84, 51, 13" Text="15,800.00" />
                    <uc:OcrTextInfo Region="827, 84, 24, 11" Text="0.00" />
                    <uc:OcrTextInfo Region="954, 84, 51, 13" Text="15,800.00" />
                    <uc:OcrTextInfo Region="39, 249, 40, 12" Text="Allocate" />
                    <uc:OcrTextInfo Region="116, 249, 27, 12" Text="Code" />
                    <uc:OcrTextInfo Region="200, 250, 25, 11" Text="Date" />
                    <uc:OcrTextInfo Region="320, 249, 52, 12" Text="Reference" />
                    <uc:OcrTextInfo Region="452, 250, 55, 12" Text="Description" />
                    <uc:OcrTextInfo Region="714, 249, 28, 12" Text="Debit" />
                    <uc:OcrTextInfo Region="822, 249, 32, 12" Text="Credit" />
                    <uc:OcrTextInfo Region="945, 250, 61, 13" Text="Outstanding" />
                    <uc:OcrTextInfo Region="116, 267, 35, 11" Text="MPESA" />
                    <uc:OcrTextInfo Region="201, 266, 52, 14" Text="10/6/2022" />
                    <uc:OcrTextInfo Region="320, 267, 46, 11" Text="REC4236" />
                    <uc:OcrTextInfo Region="452, 267, 115, 13" Text="Receipt-MPESA-004826" />
                    <uc:OcrTextInfo Region="716, 267, 24, 11" Text="0.00" />
                    <uc:OcrTextInfo Region="823, 267, 29, 11" Text="10.00" />
                    <uc:OcrTextInfo Region="976, 267, 29, 11" Text="10.00" />
                    <uc:OcrTextInfo Region="116, 286, 35, 11" Text="MPESA" />
                    <uc:OcrTextInfo Region="201, 285, 57, 14" Text="10/19/2022" />
                    <uc:OcrTextInfo Region="320, 286, 46, 11" Text="REC4238" />
                    <uc:OcrTextInfo Region="452, 286, 114, 13" Text="Receipt-MPESA-004826" />
                    <uc:OcrTextInfo Region="716, 286, 24, 11" Text="0.00" />
                    <uc:OcrTextInfo Region="823, 286, 29, 11" Text="10.00" />
                    <uc:OcrTextInfo Region="976, 286, 29, 11" Text="10.00" />
                    <uc:OcrTextInfo Region="116, 305, 35, 11" Text="MPESA" />
                    <uc:OcrTextInfo Region="201, 304, 57, 14" Text="10/19/2022" />
                    <uc:OcrTextInfo Region="320, 305, 46, 11" Text="REC4239" />
                    <uc:OcrTextInfo Region="452, 305, 115, 13" Text="Receipt-MPESA-004826" />
                    <uc:OcrTextInfo Region="716, 305, 24, 11" Text="0.00" />
                    <uc:OcrTextInfo Region="829, 305, 23, 11" Text="1.00" />
                    <uc:OcrTextInfo Region="982, 305, 23, 11" Text="1.00" />
                    <uc:OcrTextInfo Region="817, 526, 17, 11" Text="OK" />
                    <uc:OcrTextInfo Region="912, 525, 34, 12" Text="Cancel" />
                  </scg:List>
                </uc:CVCache.OcrTexts>
              </uc:CVCache>
              <uc:CVCache DataSent="False" DisplayName="Screen CV Click - 'OK'" Id="7112ba1c-388d-4383-ad64-0f4a74255a72" InformativeScreenshot="9081cb23ae79634e718ff5498badc9a1" LogicalPosition="274, 129" OcrText="Voucher Management -- Customer Allocation X Customer ACCA/0001/2015 v Allove-to ad Debit Credit Outstanding X 15,800.00 0.00 15,800.00 Debit Credit Outstanding 15,800.00 0.00 15,800.00 0.00 1.00 1.00 Debit Credit Outstanding 0.00 10.00 10.00 0.00 10.00 10.00 1.00 0.00 1.00 1.00 OK Cancel OK Cancel" Position="274, 129" ServerVersion="1">
                <uc:CVCache.CvAnchorRelations>
                  <scg:List x:TypeArguments="uc:AnchorRelationInfo" Capacity="4">
                    <uc:AnchorRelationInfo IsTargetText="False" Target="1">
                      <uc:AnchorRelationInfo.Anchors>
                        <x:Array Type="x:Int32">
                          <x:Int32>6</x:Int32>
                        </x:Array>
                      </uc:AnchorRelationInfo.Anchors>
                    </uc:AnchorRelationInfo>
                  </scg:List>
                </uc:CVCache.CvAnchorRelations>
                <uc:CVCache.CvTables>
                  <x:Array Type="uc:CvTableInfo">
                    <uc:CvTableInfo>
                      <uc:CvTableInfo.Columns>
                        <x:Array Type="x:Int32">
                          <x:Int32>645</x:Int32>
                          <x:Int32>658</x:Int32>
                          <x:Int32>741</x:Int32>
                          <x:Int32>851</x:Int32>
                          <x:Int32>1007</x:Int32>
                        </x:Array>
                      </uc:CvTableInfo.Columns>
                      <uc:CvTableInfo.Rows>
                        <x:Array Type="x:Int32">
                          <x:Int32>243</x:Int32>
                          <x:Int32>261</x:Int32>
                          <x:Int32>280</x:Int32>
                          <x:Int32>299</x:Int32>
                          <x:Int32>320</x:Int32>
                        </x:Array>
                      </uc:CvTableInfo.Rows>
                    </uc:CvTableInfo>
                    <uc:CvTableInfo>
                      <uc:CvTableInfo.Columns>
                        <x:Array Type="x:Int32">
                          <x:Int32>0</x:Int32>
                          <x:Int32>147</x:Int32>
                          <x:Int32>290</x:Int32>
                          <x:Int32>435</x:Int32>
                          <x:Int32>644</x:Int32>
                        </x:Array>
                      </uc:CvTableInfo.Columns>
                      <uc:CvTableInfo.Rows>
                        <x:Array Type="x:Int32">
                          <x:Int32>95</x:Int32>
                          <x:Int32>111</x:Int32>
                          <x:Int32>130</x:Int32>
                          <x:Int32>151</x:Int32>
                        </x:Array>
                      </uc:CvTableInfo.Rows>
                    </uc:CvTableInfo>
                    <uc:CvTableInfo>
                      <uc:CvTableInfo.Columns>
                        <x:Array Type="x:Int32">
                          <x:Int32>291</x:Int32>
                          <x:Int32>648</x:Int32>
                          <x:Int32>761</x:Int32>
                          <x:Int32>852</x:Int32>
                          <x:Int32>1009</x:Int32>
                        </x:Array>
                      </uc:CvTableInfo.Columns>
                      <uc:CvTableInfo.Rows>
                        <x:Array Type="x:Int32">
                          <x:Int32>61</x:Int32>
                          <x:Int32>79</x:Int32>
                          <x:Int32>99</x:Int32>
                        </x:Array>
                      </uc:CvTableInfo.Rows>
                    </uc:CvTableInfo>
                  </x:Array>
                </uc:CVCache.CvTables>
                <uc:CVCache.CvUiElements>
                  <scg:List x:TypeArguments="uc:CvElementInfo" Capacity="64">
                    <uc:CvElementInfo Category="Button" Region="439, 329, 100, 35" />
                    <uc:CvElementInfo Category="InputBox" Region="107, 31, 373, 22" />
                    <uc:CvElementInfo Category="Button" Region="542, 329, 102, 34" />
                    <uc:CvElementInfo Category="Button" Region="881, 515, 100, 34" />
                    <uc:CvElementInfo Category="CloseButton" Region="605, 74, 40, 21" />
                    <uc:CvElementInfo Category="CloseButton" Region="971, 2, 40, 20" />
                    <uc:CvElementInfo Category="Button" Region="777, 515, 99, 33" />
                    <uc:CvElementInfo Category="InputBox" Region="26, 302, 163, 22" />
                    <uc:CvElementInfo Category="ArrowButton" Region="464, 31, 19, 21" />
                    <uc:CvElementInfo Category="Cell" Region="741, 299, 110, 21" />
                    <uc:CvElementInfo Category="Cell" Region="658, 243, 83, 18" />
                    <uc:CvElementInfo Category="Cell" Region="851, 243, 156, 18" />
                    <uc:CvElementInfo Category="Cell" Region="761, 79, 91, 20" />
                    <uc:CvElementInfo Category="Cell" Region="741, 243, 110, 18" />
                    <uc:CvElementInfo Category="Cell" Region="741, 261, 110, 19" />
                    <uc:CvElementInfo Category="Cell" Region="761, 61, 91, 18" />
                    <uc:CvElementInfo Category="Cell" Region="147, 130, 143, 21" />
                    <uc:CvElementInfo Category="Cell" Region="852, 61, 157, 18" />
                    <uc:CvElementInfo Category="Cell" Region="851, 261, 156, 19" />
                    <uc:CvElementInfo Category="Cell" Region="658, 299, 83, 21" />
                    <uc:CvElementInfo Category="Cell" Region="147, 95, 143, 16" />
                    <uc:CvElementInfo Category="Cell" Region="741, 280, 110, 19" />
                    <uc:CvElementInfo Category="Cell" Region="435, 130, 209, 21" />
                    <uc:CvElementInfo Category="Cell" Region="851, 299, 156, 21" />
                    <uc:CvElementInfo Category="Cell" Region="290, 130, 145, 21" />
                    <uc:CvElementInfo Category="Cell" Region="658, 261, 83, 19" />
                    <uc:CvElementInfo Category="Cell" Region="851, 280, 156, 19" />
                    <uc:CvElementInfo Category="Cell" Region="290, 111, 145, 19" />
                    <uc:CvElementInfo Category="Cell" Region="147, 111, 143, 19" />
                    <uc:CvElementInfo Category="Cell" Region="852, 79, 157, 20" />
                    <uc:CvElementInfo Category="Cell" Region="290, 95, 145, 16" />
                    <uc:CvElementInfo Category="Cell" Region="658, 280, 83, 19" />
                    <uc:CvElementInfo Category="Cell" Region="648, 61, 113, 18" />
                    <uc:CvElementInfo Category="Cell" Region="435, 95, 209, 16" />
                    <uc:CvElementInfo Category="Cell" Region="435, 111, 209, 19" />
                    <uc:CvElementInfo Category="Cell" Region="0, 130, 147, 21" />
                    <uc:CvElementInfo Category="Cell" Region="0, 111, 147, 19" />
                    <uc:CvElementInfo Category="Cell" Region="648, 79, 113, 20" />
                    <uc:CvElementInfo Category="Cell" Region="645, 243, 13, 18" />
                    <uc:CvElementInfo Category="Cell" Region="0, 95, 147, 16" />
                    <uc:CvElementInfo Category="Cell" Region="645, 261, 13, 19" />
                    <uc:CvElementInfo Category="Cell" Region="645, 299, 13, 21" />
                    <uc:CvElementInfo Category="Cell" Region="645, 280, 13, 19" />
                    <uc:CvElementInfo Category="MaximizeButton" Confidence="Runtime" Region="585, 77, 16, 15" />
                    <uc:CvElementInfo Category="Icon" Confidence="Runtime" Region="585, 77, 16, 16" />
                    <uc:CvElementInfo Category="MinimizeButton" Confidence="Runtime" Region="585, 77, 15, 15" />
                    <uc:CvElementInfo Category="Icon" Confidence="Runtime" Region="0, 135, 13, 15" />
                    <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="644, 237, 15, 9" />
                    <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="0, 64, 117, 30" />
                    <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="850, 237, 159, 8" />
                    <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="653, 237, 87, 8" />
                    <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="642, 129, 127, 24" />
                    <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="643, 96, 116, 19" />
                    <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="644, 236, 29, 8" />
                    <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="850, 96, 158, 20" />
                    <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="739, 237, 112, 8" />
                  </scg:List>
                </uc:CVCache.CvUiElements>
                <uc:CVCache.OcrTexts>
                  <scg:List x:TypeArguments="uc:OcrTextInfo" Capacity="64">
                    <uc:OcrTextInfo Region="1, 5, 49, 12" Text="Voucher" />
                    <uc:OcrTextInfo Region="51, 6, 77, 13" Text="Management" />
                    <uc:OcrTextInfo Region="129, 6, 11, 11" Text="--" />
                    <uc:OcrTextInfo Region="142, 6, 57, 11" Text="Customer" />
                    <uc:OcrTextInfo Region="200, 5, 57, 12" Text="Allocation" />
                    <uc:OcrTextInfo Region="985, 6, 12, 10" Text="X" />
                    <uc:OcrTextInfo Region="54, 36, 48, 11" Text="Customer" />
                    <uc:OcrTextInfo Region="110, 35, 87, 14" Text="ACCA/0001/2015" />
                    <uc:OcrTextInfo Region="468, 37, 10, 9" Text="v" />
                    <uc:OcrTextInfo Region="40, 66, 39, 8" Text="Allove-to" />
                    <uc:OcrTextInfo Region="114, 65, 29, 9" Text="ad" />
                    <uc:OcrTextInfo Region="733, 66, 28, 12" Text="Debit" />
                    <uc:OcrTextInfo Region="821, 66, 32, 12" Text="Credit" />
                    <uc:OcrTextInfo Region="945, 67, 61, 12" Text="Outstanding" />
                    <uc:OcrTextInfo Region="619, 79, 11, 10" Text="X" />
                    <uc:OcrTextInfo Region="708, 84, 51, 13" Text="15,800.00" />
                    <uc:OcrTextInfo Region="827, 84, 24, 11" Text="0.00" />
                    <uc:OcrTextInfo Region="954, 84, 51, 13" Text="15,800.00" />
                    <uc:OcrTextInfo Region="263, 99, 28, 12" Text="Debit" />
                    <uc:OcrTextInfo Region="404, 99, 32, 12" Text="Credit" />
                    <uc:OcrTextInfo Region="582, 100, 61, 12" Text="Outstanding" />
                    <uc:OcrTextInfo Region="239, 117, 50, 13" Text="15,800.00" />
                    <uc:OcrTextInfo Region="410, 117, 24, 11" Text="0.00" />
                    <uc:OcrTextInfo Region="591, 117, 51, 13" Text="15,800.00" />
                    <uc:OcrTextInfo Region="265, 136, 24, 11" Text="0.00" />
                    <uc:OcrTextInfo Region="411, 136, 23, 11" Text="1.00" />
                    <uc:OcrTextInfo Region="619, 136, 23, 11" Text="1.00" />
                    <uc:OcrTextInfo Region="714, 249, 28, 12" Text="Debit" />
                    <uc:OcrTextInfo Region="822, 249, 32, 12" Text="Credit" />
                    <uc:OcrTextInfo Region="945, 250, 61, 13" Text="Outstanding" />
                    <uc:OcrTextInfo Region="716, 267, 24, 11" Text="0.00" />
                    <uc:OcrTextInfo Region="823, 267, 29, 11" Text="10.00" />
                    <uc:OcrTextInfo Region="976, 267, 29, 11" Text="10.00" />
                    <uc:OcrTextInfo Region="716, 286, 24, 11" Text="0.00" />
                    <uc:OcrTextInfo Region="823, 286, 29, 11" Text="10.00" />
                    <uc:OcrTextInfo Region="976, 286, 29, 11" Text="10.00" />
                    <uc:OcrTextInfo Region="162, 307, 23, 11" Text="1.00" />
                    <uc:OcrTextInfo Region="716, 305, 24, 11" Text="0.00" />
                    <uc:OcrTextInfo Region="829, 305, 23, 11" Text="1.00" />
                    <uc:OcrTextInfo Region="982, 305, 23, 11" Text="1.00" />
                    <uc:OcrTextInfo Region="479, 340, 17, 11" Text="OK" />
                    <uc:OcrTextInfo Region="575, 339, 34, 12" Text="Cancel" />
                    <uc:OcrTextInfo Region="817, 526, 17, 11" Text="OK" />
                    <uc:OcrTextInfo Region="912, 525, 34, 12" Text="Cancel" />
                  </scg:List>
                </uc:CVCache.OcrTexts>
              </uc:CVCache>
            </scg:List>
          </uc:CvCacheContainer.Caches>
        </uc:CvCacheContainer>
      </p:CVScope.DesignTimeCacheContainer>
      <p:CVScope.OCREngine>
        <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd2:Rectangle, x:String))">
          <ActivityFunc.Argument>
            <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
          </ActivityFunc.Argument>
          <p1:UiPathScreenOCR ApiKey="{x:Null}" Endpoint="{x:Null}" Output="{x:Null}" PredictionId="{x:Null}" Text="{x:Null}" UseLocalServer="{x:Null}" ComputeSkewAngle="False" DisplayName="UiPath Screen OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="200,25" sap2010:WorkflowViewState.IdRef="UiPathScreenOCR_2" Image="[Image]" Language="auto" Profile="Screen" Scale="1" Timeout="100000" />
        </ActivityFunc>
      </p:CVScope.OCREngine>
      <p:CVScope.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="0e426ab7-e9d5-4e8a-a5e5-374672c2771c" InformativeScreenshot="22b050fbdf1fb796b8f339684c6e495a" Selector="&lt;wnd app='evolution.exe' ctrlname='FrmAllocation' /&gt;" WaitForReady="INTERACTIVE">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
        </ui:Target>
      </p:CVScope.Target>
      <p:CVScope.UseLocalServer>
        <InArgument x:TypeArguments="x:Boolean" />
      </p:CVScope.UseLocalServer>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </p:CVScope>
  </Sequence>
</Activity>